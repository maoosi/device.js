!function(e,t){for(var r in t)e[r]=t[r]}(exports,function(e){var t={};function r(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(i,n,function(t){return e[t]}.bind(null,n));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e,t){e.exports=require("@vue/reactivity")},function(e,t){e.exports=require("lodash.throttle")},function(e,t,r){"use strict";r.r(t),r.d(t,"device",(function(){return a}));var i=r(0),n=r(1),o=r.n(n);const s=r(3);const a=new class{constructor(e){return this.options={watch:e&&e.watch||!1,refreshRate:e&&e.refreshRate||200},this.device=Object(i.reactive)({deviceOS:null,deviceType:null,deviceOrientation:null,browser:null,browserVersion:null,viewportHeight:null,viewportWidth:null,isBrowserEvergreen:null,isPWA:null,isSupportedWebP:null,isSupportedWebGL:null,isSupportedWebRTC:null}),this.resizeFunc=o()(()=>this.refreshProps(),this.options.refreshRate),this.options.watch&&this.init(),this}init(){return window&&(this.refreshProps(),window.addEventListener("resize",this.resizeFunc,!0)),this}destroy(){return window&&window.removeEventListener("resize",this.resizeFunc,!0),this}refreshProps(){this.detectUserAgent(),this.detectOrientation(),this.detectEvergreenBrowser(),this.detectWebP(),this.detectWebRTC(),this.detectWebGL(),this.detectPWA(),this.device.viewportWidth=window.innerWidth,this.device.viewportHeight=window.innerHeight}detectUserAgent(){const e={browser:{name:null,version:null},deviceOS:null,deviceType:"desktop"},t=navigator.userAgent.toLowerCase()||navigator.vendor.toLowerCase()||window.opera.toLowerCase();for(const[r,i]of Object.entries(s))Array.isArray(i)&&i.forEach(i=>{i.regex.forEach(n=>{const o=new RegExp(n.split("\\\\").join("\\")).exec(t),s=o&&o[1]&&o[1].split(/[._]/).slice(0,3);o&&"browser"===r?(e[r].name=i.name,s&&(Array.isArray(s)&&s.length<3&&s.concat(1==s.length?["0","0"]:["0"]),e[r].version=s.join("."))):o&&(e[r]=i.name)})});this.device.browser=e.browser.name,this.device.browserVersion=e.browser.version,this.device.deviceOS=e.deviceOS,this.device.deviceType=e.deviceType}detectOrientation(){let e="landscape";this.device.deviceType&&["mobile","tablet"].includes(this.device.deviceType)&&window.matchMedia("(orientation: portrait)").matches&&(e="portrait"),this.device.deviceOrientation=e}detectEvergreenBrowser(){this.device.isBrowserEvergreen=this.device.browser&&["chrome","safari","edge","firefox","opera"].includes(this.device.browser)||!1}detectWebP(){const e=document.createElement("canvas");e.width=e.height=1,this.device.isSupportedWebP=e.toDataURL&&e.toDataURL("image/webp")&&0===e.toDataURL("image/webp").indexOf("data:image/webp")||!1}detectWebRTC(){this.device.isSupportedWebRTC=void 0!==navigator.getUserMedia||void 0!==navigator.webkitGetUserMedia||void 0!==navigator.mozGetUserMedia||void 0!==navigator.msGetUserMedia||void 0!==window.RTCPeerConnection}detectWebGL(){const e=document.createElement("canvas");this.device.isSupportedWebGL=!!window.WebGLRenderingContext&&void 0!==(e.getContext("webgl")||e.getContext("experimental-webgl"))}detectPWA(){this.device.isPWA=window.matchMedia("(display-mode: standalone)").matches||window.navigator.standalone||document.referrer.includes("android-app://")}}({watch:!0}).device},function(e){e.exports=JSON.parse('{"browser":[{"name":"chrome","regex":["(?!chrom.*opr)chrom(?:e|ium)/([0-9\\\\.]+)(:?\\\\s|$)","crios/([0-9\\\\.]+)(:?\\\\s|$)"]},{"name":"safari","regex":["version/([0-9\\\\._]+).*safari"]},{"name":"firefox","regex":["firefox/([0-9\\\\.]+)(?:\\\\s|$)","fxios/([0-9\\\\.]+)"]},{"name":"facebook","regex":["fbav/([0-9\\\\.]+)"]},{"name":"instagram","regex":["instagram\\\\ ([0-9\\\\.]+)"]},{"name":"edge","regex":["edge/([0-9\\\\._]+)"]},{"name":"ie","regex":["trident/7\\\\.0.*rv\\\\:([0-9\\\\.]+).*\\\\).*gecko$","msie\\\\s([0-9\\\\.]+);.*trident/[4-7].0","msie\\\\s(7\\\\.0)"]},{"name":"opera","regex":["opera/([0-9\\\\.]+)(?:\\\\s|$)","opr/([0-9\\\\.]+)(:?\\\\s|$)$"]},{"name":"phantomjs","regex":["phantomjs/([0-9\\\\.]+)(:?\\\\s|$)"]}],"deviceOS":[{"name":"android","regex":["android"]},{"name":"ios","regex":["ip(hone|od|ad)"]},{"name":"macos","regex":["macintosh"]},{"name":"windows","regex":["(windows)(?!\\\\smobile)"]},{"name":"windowsmobile","regex":["(windows\\\\smobile)"]}],"deviceType":[{"name":"mobile","regex":["(iphone|ipod|((?:android)?.*?mobile)|blackberry|nokia)"]},{"name":"tablet","regex":["(ipad|android(?!.*mobile)|tablet)"]},{"name":"tv","regex":["googletv|sonydtv"]}]}')}]));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,