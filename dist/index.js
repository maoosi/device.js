!function(e,t){for(var i in t)e[i]=t[i]}(exports,function(e){var t={};function i(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(r,o,function(t){return e[t]}.bind(null,o));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=2)}([function(e,t){e.exports=require("@vue/reactivity")},function(e,t){e.exports=require("lodash.throttle")},function(e,t,i){"use strict";i.r(t),i.d(t,"device",(function(){return d})),i.d(t,"disableOverscroll",(function(){return c})),i.d(t,"enableOverscroll",(function(){return l})),i.d(t,"disableDoubleTapZoom",(function(){return u})),i.d(t,"enableDoubleTapZoom",(function(){return h})),i.d(t,"disableToolbarAutohide",(function(){return v})),i.d(t,"enableToolbarAutohide",(function(){return p}));var r=i(0),o=i(1),n=i.n(o);const s=i(3);const a=new class{constructor(e){return this.options={watch:e&&e.watch||!1,refreshRate:e&&e.refreshRate||200},this.device=Object(r.reactive)({deviceOS:null,deviceType:null,deviceOrientation:null,browser:null,browserVersion:null,viewportHeight:null,viewportWidth:null,isKeyboardOpen:null,isBrowserEvergreen:null,isSupportedWebP:null,isSupportedWebGL:null,isSupportedWebRTC:null}),this.viewportHeightMemory=null,this.viewportWidthMemory=null,this.resizeFunc=n()(()=>this.refreshProps(),this.options.refreshRate),this.options.watch&&this.init(),this}init(){return window&&(this.refreshProps(),window.addEventListener("resize",this.resizeFunc,!0)),this}destroy(){return window&&window.removeEventListener("resize",this.resizeFunc,!0),this}refreshProps(){this.detectUserAgent(),this.detectOrientation(),this.detectEvergreenBrowser(),this.detectWebP(),this.detectWebRTC(),this.detectWebGL(),this.viewportWidthMemory=this.device.viewportWidth,this.viewportHeightMemory=this.device.viewportHeight,this.device.viewportWidth=window.innerWidth,this.device.viewportHeight=window.innerHeight,this.detectKeyboardStatus()}detectUserAgent(){const e={browser:{name:null,version:null},deviceOS:null,deviceType:"desktop"},t=navigator.userAgent.toLowerCase()||navigator.vendor.toLowerCase()||window.opera.toLowerCase();for(const[i,r]of Object.entries(s))Array.isArray(r)&&r.forEach(r=>{r.regex.forEach(o=>{const n=new RegExp(o.split("\\\\").join("\\")).exec(t),s=n&&n[1]&&n[1].split(/[._]/).slice(0,3);n&&"browser"===i?(e[i].name=r.name,s&&(Array.isArray(s)&&s.length<3&&s.concat(1==s.length?["0","0"]:["0"]),e[i].version=s.join("."))):n&&(e[i]=r.name)})});this.device.browser=e.browser.name,this.device.browserVersion=e.browser.version,this.device.deviceOS=e.deviceOS,this.device.deviceType=e.deviceType}detectOrientation(){let e="landscape";this.device.deviceType&&["mobile","tablet"].includes(this.device.deviceType)&&window.matchMedia("(orientation: portrait)").matches&&(e="portrait"),this.device.deviceOrientation=e}detectKeyboardStatus(){const e=this.device.deviceType&&["mobile","tablet"].includes(this.device.deviceType),t=document.activeElement&&document.activeElement.tagName.toLowerCase()||null,i=t&&["input","textarea"].includes(t),r=this.viewportHeightMemory&&this.viewportWidthMemory&&this.device.viewportWidth&&this.device.viewportHeight&&this.device.viewportWidth===this.viewportWidthMemory&&this.device.viewportHeight<this.viewportHeightMemory;this.device.isKeyboardOpen=!!(e&&r&&i)}detectEvergreenBrowser(){this.device.isBrowserEvergreen=this.device.browser&&["chrome","safari","edge","firefox","opera"].includes(this.device.browser)||null}detectWebP(){const e=document.createElement("canvas");e.width=e.height=1,this.device.isSupportedWebP=e.toDataURL&&e.toDataURL("image/webp")&&0===e.toDataURL("image/webp").indexOf("data:image/webp")||null}detectWebRTC(){this.device.isSupportedWebRTC=void 0!==navigator.getUserMedia||void 0!==navigator.webkitGetUserMedia||void 0!==navigator.mozGetUserMedia||void 0!==navigator.msGetUserMedia||void 0!==window.RTCPeerConnection||null}detectWebGL(){const e=document.createElement("canvas"),t=e.getContext("webgl")||e.getContext("experimental-webgl");this.device.isSupportedWebGL=t&&t instanceof WebGLRenderingContext}disableOverscroll(){return this}enableOverscroll(){return this}disableDoubleTapZoom(){return this}enableDoubleTapZoom(){return this}disableToolbarAutohide(){return this}enableToolbarAutohide(){return this}}({watch:!0}),d=a.device,c=()=>a.disableOverscroll(),l=()=>a.enableOverscroll(),u=()=>a.disableDoubleTapZoom(),h=()=>a.enableDoubleTapZoom(),v=()=>a.disableToolbarAutohide(),p=()=>a.enableToolbarAutohide()},function(e){e.exports=JSON.parse('{"browser":[{"name":"chrome","regex":["(?!chrom.*opr)chrom(?:e|ium)/([0-9\\\\.]+)(:?\\\\s|$)","crios/([0-9\\\\.]+)(:?\\\\s|$)"]},{"name":"safari","regex":["version/([0-9\\\\._]+).*safari"]},{"name":"firefox","regex":["firefox/([0-9\\\\.]+)(?:\\\\s|$)","fxios/([0-9\\\\.]+)"]},{"name":"facebook","regex":["fbav/([0-9\\\\.]+)"]},{"name":"instagram","regex":["instagram\\\\ ([0-9\\\\.]+)"]},{"name":"edge","regex":["edge/([0-9\\\\._]+)"]},{"name":"ie","regex":["trident/7\\\\.0.*rv\\\\:([0-9\\\\.]+).*\\\\).*gecko$","msie\\\\s([0-9\\\\.]+);.*trident/[4-7].0","msie\\\\s(7\\\\.0)"]},{"name":"opera","regex":["opera/([0-9\\\\.]+)(?:\\\\s|$)","opr/([0-9\\\\.]+)(:?\\\\s|$)$"]},{"name":"phantomjs","regex":["phantomjs/([0-9\\\\.]+)(:?\\\\s|$)"]}],"deviceOS":[{"name":"android","regex":["android"]},{"name":"ios","regex":["ip(hone|od|ad)"]},{"name":"macos","regex":["mac\\\\sos"]},{"name":"windows","regex":["(windows)(?!\\\\smobile)"]},{"name":"windowsmobile","regex":["(windows\\\\smobile)"]}],"deviceType":[{"name":"mobile","regex":["(iphone|ipod|((?:android)?.*?mobile)|blackberry|nokia)"]},{"name":"tablet","regex":["(ipad|android(?!.*mobile)|tablet)"]},{"name":"tv","regex":["googletv|sonydtv"]}]}')}]));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,